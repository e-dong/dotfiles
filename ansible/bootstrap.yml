# Bootstrap script
- name: Install pacman packages
  hosts: localhost
  tasks:
    - name: Install Packages
      become: true
      community.general.pacman:
        name:
          - git
          - neovim
          - tmux
        state: present
- name: Symlink dotfiles
  hosts: localhost
  roles:
    - user
  tasks:
    - name: Get repo root
      ansible.builtin.command: "git rev-parse --show-toplevel"
      register: repo_root
      changed_when: false
    - name: Link .gitconfig
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.gitconfig"
        dest: "{{ user_home }}/.gitconfig"
        state: link
        force: true
        follow: false
    - name: Link .tmux.conf
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.tmux.conf"
        dest: "{{ user_home }}/.tmux.conf"
        state: link
        force: true
        follow: false
    - name: Link .wezterm.lua
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.wezterm.lua"
        dest: "{{ user_home }}/.wezterm.lua"
        state: link
        force: true
        follow: false
    - name: Link .config/ghostty
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.config/ghostty"
        dest: "{{ user_home }}/.config/ghostty"
        state: link
        force: true
        follow: false
    - name: Link .config/nvim
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.config/nvim"
        dest: "{{ user_home }}/.config/nvim"
        state: link
        force: true
        follow: false
    - name: Link .local/theme
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.local/theme"
        dest: "{{ user_home }}/.local/theme"
        state: link
        force: true
        follow: false
    - name: Link .screenlayout
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/.screenlayout"
        dest: "{{ user_home }}/.screenlayout"
        state: link
        force: true
        follow: false
    - name: Link scripts
      ansible.builtin.file:
        src: "{{ repo_root.stdout }}/scripts"
        dest: "{{ user_home }}/scripts"
        state: link
        force: true
        follow: false
- name: Setup yay AUR helper
  hosts: localhost
  roles:
    - user
  tasks:
    - name: Check if yay is installed
      ansible.builtin.command:
        cmd: which yay
      register: which_yay_command
      changed_when: false
    - name: Set fact if yay command exists
      ansible.builtin.set_fact:
        yay_command_exists: '{{ which_yay_command.rc == 0 }}'
    - name: Clone repo
      ansible.builtin.git:
        repo: https://aur.archlinux.org/yay.git
        dest: "{{ user_home }}/tools/yay"
        version: master
        update: false
      when: not yay_command_exists
      register: yay_clone
    - name: Execute makepkg build
      ansible.builtin.command:
        cmd: makepkg -fsi --noconfirm
        chdir: "{{ user_home }}/tools/yay"
      changed_when: true
      when:
        - yay_clone is changed
        - not yay_command_exists
